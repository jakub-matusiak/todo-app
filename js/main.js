!function(t){var n={};function e(c){if(n[c])return n[c].exports;var o=n[c]={i:c,l:!1,exports:{}};return t[c].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,c){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:c})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var c=Object.create(null);if(e.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)e.d(c,o,function(n){return t[n]}.bind(null,o));return c},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(module,exports){eval("const input = document.querySelector('.todo__input');\nconst form = document.querySelector('.todo__form');\nconst list = document.querySelector('.todo__list');\nconst todo = document.querySelector('.todo');\nconst warning = document.querySelector('.todo__warning');\nlet tasks = [];\nlet counter = localStorage.getItem('counter');\ncounter = Number(counter);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  \n  if (input.value) {\n    tasks.push({id: counter, task: input.value, done: false});\n    list.textContent = '';\n    render();\n    store();\n    input.value = '';\n    \n    if (list.childNodes.length == 1) {\n      todo.removeChild(warning);\n    }\n  }\n\n  input.focus();\n});\n\nlist.addEventListener('click', (e) => {\n  const key = e.target.dataset.key;\n  const checkbox = document.querySelector(`.todo__checkbox--${key}`);\n\n  if (e.target.classList.contains(`todo__remove--${key}`)) {\n    tasks.splice(key-1, 1);\n    list.textContent = '';\n    render();\n    store();\n\n    if (list.childNodes.length == 0) {\n      todo.appendChild(warning);\n      localStorage.clear();\n    }\n    counter--;\n  }\n  \n  if (e.target.classList.contains(`todo__checkbox--${key}`)) {\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].id == key) {\n        if (checkbox.checked) {\n          tasks[i].done = true;\n        } else {\n          tasks[i].done = false;\n        }\n      }\n    }\n    list.textContent = '';\n    render();\n    store();\n  }\n});\n\nconst render = () => {\n  counter = 1;\n  \n  for (let i = 0; i < tasks.length; i++) {\n    const item = document.createElement('li');\n    const checkbox = document.createElement('input');\n    const task = document.createElement('p');\n    const remove = document.createElement('button');\n    \n    tasks[i].id = counter;\n    task.textContent = tasks[i].task;\n    item.classList.add('todo__item');\n    checkbox.classList.add('todo__checkbox');\n    checkbox.classList.add(`todo__checkbox--${counter}`);\n    checkbox.setAttribute('type', 'checkbox');\n    if (tasks[i].done == true) {\n      item.classList.toggle('todo__item--done');\n      remove.classList.toggle('todo__remove--done');\n      checkbox.checked = 'checked';\n    }\n    checkbox.dataset.key = counter;\n    task.classList.add('todo__task');\n    remove.classList.add('todo__remove');\n    remove.classList.add(`todo__remove--${counter}`);\n    remove.dataset.key = counter;\n    \n    item.appendChild(checkbox);\n    item.appendChild(task);\n    item.appendChild(remove);\n    list.appendChild(item);\n    \n    counter++;\n  }\n}\n\nconst store = () => {\n  const jsonTasks = JSON.stringify(tasks);\n  localStorage.setItem('tasks', jsonTasks);\n  localStorage.setItem('counter', counter);\n}\n\nif (counter > 1) {\n  const tasksStringify = localStorage.getItem('tasks');\n  const newTasks = JSON.parse(tasksStringify);\n  tasks = newTasks;\n  todo.removeChild(warning);\n  render();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbWFpbi5qcz85MjkxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQiw0Q0FBNEM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSw4REFBOEQsSUFBSTs7QUFFbEUsbURBQW1ELElBQUk7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFEQUFxRCxJQUFJO0FBQ3pELG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7O0FBRUEsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxRQUFRO0FBQ2xEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvX19pbnB1dCcpO1xuY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvX19mb3JtJyk7XG5jb25zdCBsaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvZG9fX2xpc3QnKTtcbmNvbnN0IHRvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kbycpO1xuY29uc3Qgd2FybmluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvX193YXJuaW5nJyk7XG5sZXQgdGFza3MgPSBbXTtcbmxldCBjb3VudGVyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NvdW50ZXInKTtcbmNvdW50ZXIgPSBOdW1iZXIoY291bnRlcik7XG5cbmZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBcbiAgaWYgKGlucHV0LnZhbHVlKSB7XG4gICAgdGFza3MucHVzaCh7aWQ6IGNvdW50ZXIsIHRhc2s6IGlucHV0LnZhbHVlLCBkb25lOiBmYWxzZX0pO1xuICAgIGxpc3QudGV4dENvbnRlbnQgPSAnJztcbiAgICByZW5kZXIoKTtcbiAgICBzdG9yZSgpO1xuICAgIGlucHV0LnZhbHVlID0gJyc7XG4gICAgXG4gICAgaWYgKGxpc3QuY2hpbGROb2Rlcy5sZW5ndGggPT0gMSkge1xuICAgICAgdG9kby5yZW1vdmVDaGlsZCh3YXJuaW5nKTtcbiAgICB9XG4gIH1cblxuICBpbnB1dC5mb2N1cygpO1xufSk7XG5cbmxpc3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICBjb25zdCBrZXkgPSBlLnRhcmdldC5kYXRhc2V0LmtleTtcbiAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAudG9kb19fY2hlY2tib3gtLSR7a2V5fWApO1xuXG4gIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYHRvZG9fX3JlbW92ZS0tJHtrZXl9YCkpIHtcbiAgICB0YXNrcy5zcGxpY2Uoa2V5LTEsIDEpO1xuICAgIGxpc3QudGV4dENvbnRlbnQgPSAnJztcbiAgICByZW5kZXIoKTtcbiAgICBzdG9yZSgpO1xuXG4gICAgaWYgKGxpc3QuY2hpbGROb2Rlcy5sZW5ndGggPT0gMCkge1xuICAgICAgdG9kby5hcHBlbmRDaGlsZCh3YXJuaW5nKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xuICAgIH1cbiAgICBjb3VudGVyLS07XG4gIH1cbiAgXG4gIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYHRvZG9fX2NoZWNrYm94LS0ke2tleX1gKSkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFza3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh0YXNrc1tpXS5pZCA9PSBrZXkpIHtcbiAgICAgICAgaWYgKGNoZWNrYm94LmNoZWNrZWQpIHtcbiAgICAgICAgICB0YXNrc1tpXS5kb25lID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0YXNrc1tpXS5kb25lID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgbGlzdC50ZXh0Q29udGVudCA9ICcnO1xuICAgIHJlbmRlcigpO1xuICAgIHN0b3JlKCk7XG4gIH1cbn0pO1xuXG5jb25zdCByZW5kZXIgPSAoKSA9PiB7XG4gIGNvdW50ZXIgPSAxO1xuICBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YXNrcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBjb25zdCB0YXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNvbnN0IHJlbW92ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIFxuICAgIHRhc2tzW2ldLmlkID0gY291bnRlcjtcbiAgICB0YXNrLnRleHRDb250ZW50ID0gdGFza3NbaV0udGFzaztcbiAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ3RvZG9fX2l0ZW0nKTtcbiAgICBjaGVja2JveC5jbGFzc0xpc3QuYWRkKCd0b2RvX19jaGVja2JveCcpO1xuICAgIGNoZWNrYm94LmNsYXNzTGlzdC5hZGQoYHRvZG9fX2NoZWNrYm94LS0ke2NvdW50ZXJ9YCk7XG4gICAgY2hlY2tib3guc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NoZWNrYm94Jyk7XG4gICAgaWYgKHRhc2tzW2ldLmRvbmUgPT0gdHJ1ZSkge1xuICAgICAgaXRlbS5jbGFzc0xpc3QudG9nZ2xlKCd0b2RvX19pdGVtLS1kb25lJyk7XG4gICAgICByZW1vdmUuY2xhc3NMaXN0LnRvZ2dsZSgndG9kb19fcmVtb3ZlLS1kb25lJyk7XG4gICAgICBjaGVja2JveC5jaGVja2VkID0gJ2NoZWNrZWQnO1xuICAgIH1cbiAgICBjaGVja2JveC5kYXRhc2V0LmtleSA9IGNvdW50ZXI7XG4gICAgdGFzay5jbGFzc0xpc3QuYWRkKCd0b2RvX190YXNrJyk7XG4gICAgcmVtb3ZlLmNsYXNzTGlzdC5hZGQoJ3RvZG9fX3JlbW92ZScpO1xuICAgIHJlbW92ZS5jbGFzc0xpc3QuYWRkKGB0b2RvX19yZW1vdmUtLSR7Y291bnRlcn1gKTtcbiAgICByZW1vdmUuZGF0YXNldC5rZXkgPSBjb3VudGVyO1xuICAgIFxuICAgIGl0ZW0uYXBwZW5kQ2hpbGQoY2hlY2tib3gpO1xuICAgIGl0ZW0uYXBwZW5kQ2hpbGQodGFzayk7XG4gICAgaXRlbS5hcHBlbmRDaGlsZChyZW1vdmUpO1xuICAgIGxpc3QuYXBwZW5kQ2hpbGQoaXRlbSk7XG4gICAgXG4gICAgY291bnRlcisrO1xuICB9XG59XG5cbmNvbnN0IHN0b3JlID0gKCkgPT4ge1xuICBjb25zdCBqc29uVGFza3MgPSBKU09OLnN0cmluZ2lmeSh0YXNrcyk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0YXNrcycsIGpzb25UYXNrcyk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjb3VudGVyJywgY291bnRlcik7XG59XG5cbmlmIChjb3VudGVyID4gMSkge1xuICBjb25zdCB0YXNrc1N0cmluZ2lmeSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXNrcycpO1xuICBjb25zdCBuZXdUYXNrcyA9IEpTT04ucGFyc2UodGFza3NTdHJpbmdpZnkpO1xuICB0YXNrcyA9IG5ld1Rhc2tzO1xuICB0b2RvLnJlbW92ZUNoaWxkKHdhcm5pbmcpO1xuICByZW5kZXIoKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n")}]);